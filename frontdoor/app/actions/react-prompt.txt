Given the UI Config ${UI_CONFIG} and ${CONTRACT_TYPESCRIPT}, generate a valid React typescript tsx file which allows the user to interact with the contract.

Here is documentation on NemiFi SDK

```md
Aztec Wallet SDK

Connect your Aztec app to any Aztec wallet.
EIP-1193 RPC docs

// before
import { Wallet } from "@aztec/aztec.js";
const account: Wallet;
const token = await TokenContract.at(address, account);

// after
import { AztecWalletSdk, obsidion } from "@nemi-fi/wallet-sdk";
import { Contract } from "@nemi-fi/wallet-sdk/eip1193";

class Token extends Contract.fromAztec(TokenContract) {}

const sdk = new AztecWalletSdk({
  aztecNode: "http://localhost:8080",
  connectors: [obsidion()],
});
await sdk.connect("obsidion");
const account = await sdk.getAccount();
const token = await Token.at(address, account);

React

import { useAccount } from "@nemi-fi/wallet-sdk/react";

function App() {
  const account = useAccount(sdk);
  return <div>{account.address.toString()}</div>;
}
```

Based on this Aztec smart contract and UI config, generate a React component that implements the UI for the specified persona. The component should use the Nemi Wallet SDK for wallet interactions.

Contract code:
```noir
{{CONTRACT_CODE}}
```

UI Config:
```typescript
{{UI_CONFIG}}
```

Please generate a React component that:
1. Uses the Nemi Wallet SDK for wallet interactions
2. Implements all the UI components specified in the config
3. Handles all the specified actions and data sources
4. Uses Tailwind CSS for styling
5. Is responsive and user-friendly

The component should be valid TypeScript React code that can be used directly in a Next.js application.
